steps:

# This step deploys the new version of our container image
# in the hello-cloudbuild Kubernetes Engine cluster.
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy
  args:
  - 'apply'
  - '-f'
  - 'manifests/pinger/templates/deployment.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-b'
  - 'CLOUDSDK_CONTAINER_CLUSTER=hello-cloudbuild'


# Copy the files from storage needed to connect to git.
- name: 'gcr.io/cloud-builders/gsutil'
  id: copy ssh keys for github
  args: ['cp', 'gs://pipeline-test-20190604/*', '.']

- name: 'gcr.io/cloud-builders/gcloud'
  id: load github key
  args:
  - kms
  - decrypt
  - --ciphertext-file=id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=cloudbuilder
  - --key=github-key
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# Set up git with key and domain.
- name: 'gcr.io/cloud-builders/git'
  id: set ssh key for github
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

- name: 'gcr.io/cloud-builders/git'
  id: Copy to dev branch
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git config --global user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
    # remove https origin and add ssh origin
    git remote remove origin && git remote add origin git@github.com:dillydev/pinger-k8s.git && \
    # Switch to the dev branch and copy the manifests from the candidate branch
    git fetch origin dev && git checkout dev && \
    git checkout $COMMIT_SHA manifests && \
    # Commit the manifests with a descriptive commit message
    git commit -m "Manifest from commit $COMMIT_SHA
    $(git log --format=%B -n 1 $COMMIT_SHA)" && \
    # Push the changes back to Cloud Source Repository
    git push origin dev
  volumes:
  - name: 'ssh'
    path: /root/.ssh